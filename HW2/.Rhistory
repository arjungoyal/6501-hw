library(datasets)
library(ggplot2)
#summary(iris)
#ggplot(iris,  aes(Petal.Length, Petal.Width, color=Species))+geom_point()
#ggplot(iris, aes(Sepal.Length, Sepal.Width, color=Species))+geom_point()
summary(iris)
# Remove the species label from Iris dataset
iris_no_class = iris[,-5]
iris_class = iris[,c("Species")]
# Normalize data?
normalize <- function(x){
return ((x-min(x))/(max(x)-min(x)))
}
iris_no_class$Sepal.Length<- normalize(iris_no_class$Sepal.Length)
iris_no_class$Sepal.Width<- normalize(iris_no_class$Sepal.Width)
iris_no_class$Petal.Length<- normalize(iris_no_class$Petal.Length)
iris_no_class$Petal.Width<- normalize(iris_no_class$Petal.Width)
kmeans_acc = function(train_data, k){
model = kmeans(train_data,k)
#return(model$size)
par(mfrow=c(2,2))
plot(iris_no_class[c(1,2)],col=model$cluster)
plot(iris_no_class[c(1,2)],col=iris_class)
plot(iris_no_class[c(3,4)],col=model$cluster)
plot(iris_no_class[c(3,4)],col=iris_class)
return(table(model$cluster,iris_class))
#return(model$cluster)
}
# Test different values of k
"
for(i in 1:10){
kmeans_acc(iris_no_class,i)
}
"
kmeans_acc(iris_no_class, 3)
iris_no_class[c(1,2)]
?plot
library(datasets)
library(ggplot2)
#summary(iris)
#ggplot(iris,  aes(Petal.Length, Petal.Width, color=Species))+geom_point()
#ggplot(iris, aes(Sepal.Length, Sepal.Width, color=Species))+geom_point()
summary(iris)
# Remove the species label from Iris dataset
iris_no_class = iris[,-5]
iris_class = iris[,c("Species")]
# Normalize data?
normalize <- function(x){
return ((x-min(x))/(max(x)-min(x)))
}
iris_no_class$Sepal.Length<- normalize(iris_no_class$Sepal.Length)
iris_no_class$Sepal.Width<- normalize(iris_no_class$Sepal.Width)
iris_no_class$Petal.Length<- normalize(iris_no_class$Petal.Length)
iris_no_class$Petal.Width<- normalize(iris_no_class$Petal.Width)
kmeans_acc = function(train_data, k){
model = kmeans(train_data,k)
#return(model$size)
par(mfrow=c(2,2))
plot(iris_no_class[c(1,2)],col=model$cluster)
plot(iris_no_class[c(1,2)],col=iris_class)
plot(iris_no_class[c(3,4)],col=model$cluster)
plot(iris_no_class[c(3,4)],col=iris_class)
return(table(model$cluster,iris_class))
#return(model$cluster)
}
# Test different values of k
"
for(i in 1:10){
kmeans_acc(iris_no_class,i)
}
"
kmeans_acc(iris_no_class, 3)
library(datasets)
library(ggplot2)
#summary(iris)
#ggplot(iris,  aes(Petal.Length, Petal.Width, color=Species))+geom_point()
#ggplot(iris, aes(Sepal.Length, Sepal.Width, color=Species))+geom_point()
summary(iris)
# Remove the species label from Iris dataset
iris_no_class = iris[,-5]
iris_class = iris[,c("Species")]
# Normalize data?
normalize <- function(x){
return ((x-min(x))/(max(x)-min(x)))
}
iris_no_class$Sepal.Length<- normalize(iris_no_class$Sepal.Length)
iris_no_class$Sepal.Width<- normalize(iris_no_class$Sepal.Width)
iris_no_class$Petal.Length<- normalize(iris_no_class$Petal.Length)
iris_no_class$Petal.Width<- normalize(iris_no_class$Petal.Width)
kmeans_acc = function(train_data, k){
model = kmeans(train_data,k)
#return(model$size)
par(mfrow=c(2,2))
plot(iris_no_class[c(1,2)])
plot(iris_no_class[c(1,2)],col=iris_class)
plot(iris_no_class[c(3,4)],col=model$cluster)
plot(iris_no_class[c(3,4)],col=iris_class)
return(table(model$cluster,iris_class))
#return(model$cluster)
}
# Test different values of k
"
for(i in 1:10){
kmeans_acc(iris_no_class,i)
}
"
kmeans_acc(iris_no_class, 3)
?plot
plot(iris_no_class[c(1,2)],col=model, )
plot(iris_no_class[c(1,2)],col=iris_class)
plot(iris_no_class[c(3,4)],col=model$cluster)
plot(iris_no_class[c(3,4)],col=iris_class)
return(table(model$cluster,iris_class))
#return(model$cluster)
}
